/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2018-2022 Andres Almiray.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
pluginManagement {
    repositories {
        jcenter()
        gradlePluginPortal()
    }
    plugins {
        id 'org.kordamp.gradle.groovy-project' version kordampPluginVersion
        id 'org.kordamp.gradle.bintray'        version kordampPluginVersion
        id 'org.kordamp.gradle.plugin'         version kordampPluginVersion
        id 'org.kordamp.gradle.guide'          version kordampPluginVersion
        id 'org.ajoberstar.git-publish'        version gitPluginVersion
    }
}

buildscript {
    repositories {
        gradlePluginPortal()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath "org.kordamp.gradle:kordamp-parentbuild:$kordampBuildVersion"
    }
}
apply plugin: 'org.kordamp.gradle.kordamp-parentbuild'

rootProject.name = 'kordamp-gradle-plugins'

enforce {
    mergeStrategy = 'append'

    rule(enforcer.rules.BanDuplicateClasses) { r ->
        r.ignore('org.jetbrains.org.objectweb.asm.*')
        r.ignore('org.jetbrains.kotlin.*')
        r.ignore('com.sun.jna.*')
        r.ignore('com.mycila.*')
        r.ignore('org.xmlpull.*')
        //r.ignore('org.cyberneko.*')
        //r.ignore('org.apache.xerces.*')
        //r.ignore('org.apache.maven.*')
        //r.ignore('org.codehaus.plexus.*')
        //r.ignore('org.codehaus.classworlds.*')
    }

    rule(enforcer.rules.ExcludeDependencies) { r ->
        //r.exclude('commons-logging:commons-logging')
        //r.exclude('net.java.dev.jna:platform')
        //r.exclude('com.mycila.xmltool:xmltool')
        //r.exclude('xmlpull:xmlpull')
        //r.exclude('org.apache.maven:maven-ant-tasks')
    }

    rule(enforcer.rules.ForceDependencies) { r ->
        r.dependencies.addAll 'org.codehaus.plexus:plexus-utils:3.3.0',
            "org.codehaus.plexus:plexus-interpolation:$plexusIVersion",
            "org.codehaus.plexus:plexus-component-annotations:$plexusAVersion",
            'commons-lang:commons-lang:2.6',
            'commons-beanutils:commons-beanutils:1.9.3',
            'commons-collections:commons-collections:3.2.2',
            'commons-logging:commons-logging:1.2',
            'com.trilead:trilead-ssh2:1.0.0-build220',
            'net.java.dev.jna:jna:4.1.0',
            'org.apache.httpcomponents:httpclient:4.5.6',
            'org.eclipse.jgit:org.eclipse.jgit:5.6.0.201912101111-r',
            'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2',
            "org.eclipse.sisu:org.eclipse.sisu.plexus:$sisuVersion",
            "org.apache.httpcomponents:httpclient:$httpclientVersion",
            "org.apache.httpcomponents:httpcore:$httpcoreVersion",
            "org.apache.maven.resolver:maven-resolver-api:$mavenResolverVersion",
            "org.apache.maven.resolver:maven-resolver-spi:$mavenResolverVersion",
            "org.apache.maven.resolver:maven-resolver-util:$mavenResolverVersion",
            "org.apache.maven.resolver:maven-resolver-impl:$mavenResolverVersion",
            "org.apache.maven.resolver:maven-resolver-connector-basic:$mavenResolverVersion",
            "org.apache.maven.resolver:maven-resolver-transport-classpath:$mavenResolverVersion",
            "org.apache.maven.resolver:maven-resolver-transport-file:$mavenResolverVersion",
            "org.apache.maven.resolver:maven-resolver-transport-http:$mavenResolverVersion",
            "org.apache.maven:maven-builder-support:$mavenVersion",
            "org.apache.maven:maven-settings-builder:$mavenVersion",
            "org.apache.maven:maven-settings:$mavenVersion",
            "org.apache.maven:maven-model:$mavenVersion",
            "org.apache.maven:maven-resolver-provider:$mavenVersion",
            "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "junit:junit:$junitVersion"
    }
}
